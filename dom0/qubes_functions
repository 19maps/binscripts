#!/bin/bash

# qubes_functions
#
# Helper functions to assist qubes administration scripts
# to be run in dom0
#
# Date: 2019.09.18
#

__qvm_run_options="${__qvm_run_options:-"-p --color-stderr=37"}"
__notifylevel="${__notifylevel:-2}"



function notify () {
    declare _level=$1
    if [[ "$__notifylevel" -ge "$_level" ]]; then
        cat <<< "${@:2}" 1>&2
    fi
}


function zenity_fix () {
    zenity "$@" 2>/dev/null
}


function qube_get_ostype () {
    declare _vm=$1
    declare _ostype=$(qvm-run -p $_vm "hostnamectl" \
        | grep -i "operating" \
        | cut -d' ' -f 5 )
    echo $_ostype
}


function qube_get_osversion () {
    declare _vm=$1
    declare _osversion
    declare _os=$(qvm-run -p $_vm "hostnamectl" \
        | grep -i "operating" )

    declare _ostype=$(echo "$_os" \
        | cut -d' ' -f 5 )

    case $_ostype in
        "Debian")
            _osversion=$(echo $_os \
                | cut -d'(' -f 2 \
                | tr -d ')' )
            ;;
        "Fedora")
            _osversion=$(echo $_os \
                | tr -dc '[:digit:]')
            ;;
        *)
            notify 0 "ERROR: qube_get_osversion: unknown OStype:$_ostype"
            exit 1
            ;;
    esac
    echo $_osversion
}


function qube_get_state () {
    declare _vm=$1
    declare _state

    _state=$(qvm-ls -n --fields=STATE,NAME \
        | grep -m 1 "$_vm" \
        | cut -d' ' -f 1)

    notify 2 "qube_get_state: $_vm $_state"
    echo $_state
}


function qube_get_ip () {
    declare _vm=$1
    declare _ip

    _ip=$(qvm-ls -n --fields=IP,NAME \
        | grep -m 1 "$_vm" \
        | cut -d' ' -f 1)

    notify 2 "qube_get_ip: $_vm $_ip"
    echo $_ip
}


function qube_wait_shutdown () {
    declare _vm=$1

    qvm-shutdown $_vm
    while [[ "$(qube_get_state $_vm)" != "Halted" ]]; do 
        sleep 3 
    done
    notify 2 "qube_wait_shutdown: $_vm halted"
}


function qube_run_commands () {
    declare _vm=$1
    declare _user=$2
    declare _commands="${@:3}"
    declare _cmd

    if [[ -z "$_user" ]]; then _user="user"; fi

    notify 2 "qube_run_commands: VM:$_vm user:$_user"

    while read -r _cmd <&3; do
        notify 2 "qube_run_commands: --$_cmd--"
        qvm-run $__qvm_run_options -u "$_user" "$_vm" "$_cmd"
    done 3<<< "$_commands"
}


function qube_copy_file () {
    declare _vm=$1
    declare _user=$2
    declare _srcfile=$3
    declare _destfile=$4
    declare _file=$(basename $_srcfile)

    qvm-copy-to-vm $_vm $_srcfile
    qvm-run \
        $__qvm_run_options \
        -u "$_user" \
        "$_vm" \
        "mv /home/user/QubesIncoming/dom0/$_file $_destfile"

}


function qube_write_file () {
    declare _vm=$1
    declare _user=$2
    declare _file=$3
    declare _lines="${@:4}"

    notify 2 "qube_write_file: VM:$_vm user:$_user file:$_file"

    qvm-run \
        $__qvm_run_options \
        -u "$_user" \
        "$_vm" \
        "echo > $_file"
    qube_append_file $_vm $_user $_file "$_lines"
}


function qube_append_file () {
    declare _vm=$1
    declare _user=$2
    declare _file=$3
    declare _lines="${@:4}"
    declare _line

    notify 2 "qube_append_file: VM:$_vm user:$_user file:$_file"

    while read -r _line <&3; do
        notify 2 "qube_append_file: --$_line--"
        qvm-run \
            $__qvm_run_options \
            -u "$_user" \
            "$_vm" \
            "echo $_line >> $_file"
    done 3<<< "$_lines"
}


function qube_update_vm () {
    declare _vm=$1
    declare _ostype=$(qube_get_ostype $_vm)
    declare _cmd
    notify 2 "qube_update: vm:$_vm ($_ostype)"

    case $_ostype in
        "Debian")
            _commands=$(cat <<EOF
                apt-get -y update
                apt-get -y upgrade
                apt-get -y dist-upgrade
                apt-get -y clean
                apt-get -y remove
                apt-get -y autoremove
EOF
            )
            ;;
        "Fedora")
            _commands=$(cat <<EOF
                dnf upgrade -y
                dnf clean all
EOF
            )
            ;;
        *)
            notify 0 "ERROR: qube_update: unknown OStype:$_ostype"
            exit 1
    esac
    qube_run_commands $_vm "root" "$_commands"
}


function qube_install_software () {
    declare _vm=$1
    declare _ostype=$(qube_get_ostype $_vm)
    declare _software=$2
    notify 2 "qube_install_software: vm:$_vm ostype:$_ostype software:$_software"

    # software list delineated by '&'
    declare _softwarelist=$(echo $_software | tr '&' ' ')

    case $_ostype in
        "Debian")
            declare _install="apt-get -y install $_softwarelist"
            ;;
        "Fedora")
            declare _install="dnf install -y $_softwarelist"
            ;;
        *)
            notify 0 "ERROR: qube_install_software: unknown OStype:$_ostype"
            exit 1
    esac

    qube_run_commands $_vm "root" "$_install"
}





